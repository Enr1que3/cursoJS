sitaxis,variables y palabras reservadas
tipado en js es un tipado inferido, lo que se refieres es que no se requiere especificar,
si es un int, string o float
ventajas 👍
reduce el timpo de desarrollo
desventajas 👎
que no se pueden usar la mismas varibles
de numero(int) a cadena de texto (string)

tipo en js

2 grupos primitivos y objetos

**Datos primitivos
    Number como 1,8,3,4,13,45,3152,54.51
    string como "mi nombre es ","e","73" se condideran strings todos los datos que se encuentren en "" comillas dobles o '' comillas simples
    Boolean los datos primitivos booleanos solo tienes dos opciones true o flase o 0=false y 1=true
    null asigna un espacio vacio en memoria y por lo tanto no guarda ningun valor
    undefined no esta asiganada a ninguna parte de memoria 

**Objetos
    arrays un array es lista con elementos del mismo tipo como numeros o strings 
    arr = [1,2,3,4,5] arrglo de numeros
    arr =["Brenda",Diaz,]


**variables
    hay tres formas de definir varibles
    var,let son varible son como una especie de caja en donde se almacenan valores y pueden cambiar
    const


diferencias y similitudes entre null undefined, flase y 0

var, let, const


    var varible="hola soy una varible var"//<---------l
                                             //       l
                                             //       l
    for(var i=0;i<3;i++){                    //       l
        var varible="soy la segunda variable"//-------l esta variable afecta a la varible superios apesar de estar declarada en un bloque
    }
    
    const 

**escritura dinámica
    me lo perdi
**typeof
    typeof ayuda a ver que tipo de dato primitivo es 
    console.log(typeof(465))//Number
    console.log(typeof(true))//Boolean
    console.log(typeof("465"))string

    var number =45;
    number="soy un string"
    console.log(typeof number)//number
    console.log(typeof number)//string

**Notacion de js

// ; --> Delimitar el final de una linea
//paras buenas practicas si es recomendado
    let aad=5;

//.
    // . se utiliza en los objetos para acceder a los atributos
    //let movil.ancho 

//[]--> se usan para arrays o arreglos y listas tambine se puede utilizar par acceder a la posiciones del arr o la lista
    const arr=[1,2,3,4,5];
    console.log(arr[3]);
//() se utilizan para funciones
    function suma(p,q){
        return p + q;
        //completar la funcion
    }

//{}-->llaves para objetos, funciones y esctructura de control
const movil={
    anchura: 5,
    largo:45
};

